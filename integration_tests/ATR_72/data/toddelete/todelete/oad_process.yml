title: Sample OAD Process

# List of folder paths where user added custom registered OpenMDAO components
module_folders:

# Input and output files
input_file: ./problem_inputs.xml
output_file: ./problem_outputs.xml

# Definition of problem driver assuming the OpenMDAO convention "import openmdao.api as om"
driver: om.ScipyOptimizeDriver(tol=1e-2, optimizer='COBYLA')

# Definition of OpenMDAO model
# Although "model" is a mandatory name for the top level of the model, its
# sub-components can be freely named by user
model:

  #  Solvers are defined assuming the OpenMDAO convention "import openmdao.api as om"
  nonlinear_solver: om.NonlinearBlockGS(maxiter=100, atol=1e-2)
  linear_solver: om.DirectSolver()


  # Components can be put in sub-groups
  subgroup:

    # A group can be set with its own solvers.
    # Uncomment the 2 next lines for using the performance module with "mission_file_path: ::sizing_mission"
    nonlinear_solver: om.NonlinearBlockGS(maxiter=100, atol=1e-2, iprint=0)
    linear_solver: om.DirectSolver()

    geometry:
      id: fastoad.geometry.legacy
    propeller:
      id: rta.propulsion.propeller_sizing
    weight:
      id: fastoad.weight.legacy
      payload_from_npax: false
    mtow:
      id: fastoad.mass_performances.compute_MTOW
    hq_tail_sizing:
      id: fastoad.handling_qualities.tail_sizing
    hq_static_margin:
      id: fastoad.handling_qualities.static_margin
    wing_position:
      id: fastoad.loop.wing_position
    aerodynamics_highspeed:
      id: fastoad.aerodynamics.highspeed.legacy
    aerodynamics_lowspeed:
      id: fastoad.aerodynamics.lowspeed.legacy
    aerodynamics_takeoff:
      id: rta.aerodynamics.takeoff
    wing_area:
      id: fastoad.loop.wing_area
  performance:
    id: fastoad.performances.mission
    propulsion_id: rta.wrapper.propulsion.ML_TP_L1
    mission_file_path: ./sizing_mission_R.yml
    use_initializer_iteration: false
    out_file: flight_points.csv
    adjust_fuel: true
    is_sizing: true
#  engine_size:
#    id: rta.loop.engine_size

submodels:
  service.aerodynamics.polar: fastoad.submodel.aerodynamics.polar.legacy
#  service.aerodynamics.CD0.fuselage: rta.submodel.aerodynamics.CD0.fuselage
#  service.aerodynamics.CD0.wing: rta.submodel.aerodynamics.CD0.wing
#  service.aerodynamics.CD0.nacelles_pylons: rta.submodel.aerodynamics.CD0.nacelles
#  service.aerodynamics.CD0.sum: rta.submodel.aerodynamics.CD0.sum
#  service.aerodynamics.induced_drag_coefficient: fastoad.submodel.aerodynamics.induced_drag_coefficient.legacy
#  service.geometry.fuselage.basic: rta.submodel.geometry.fuselage.basic
#  service.geometry.fuselage.with_cabin_sizing: rta.submodel.geometry.fuselage.with_cabin_sizing
#  service.geometry.wing: rta.submodel.geometry.wing
#  service.geometry.nacelle_and_pylon: rta.submodel.geometry.nacelles
#  service.cg.wing.control_surfaces: rta.submodel.cg.wing.control_surfaces.legacy

#optimization: # This section is needed only if optimization process is run
 # design_variables:
 #   - name: data:geometry:wing:aspect_ratio
  #    lower: 9.0
  #    upper: 18.0
 # constraints:
 #   - name: data:geometry:wing:span
 #     upper: 60.0
 # objective:
 #   - name: data:mission:sizing:needed_block_fuel
  #    scaler: 1.e-4
